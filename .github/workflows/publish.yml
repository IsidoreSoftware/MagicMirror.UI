# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        node-version: [14.x, 16.x, 17.x]

    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm i
    # - name: Check lint
    #   run: npm run lint
    - name: Build the app
      run: npm run electron:build

    - name: Run headless unit test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm test

    - name: Run headless e2e test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run e2e
      
    - name: publish
      run: npm run web:prod

    - name: publish artifact
      uses: actions/upload-artifact@master
      with:
        name: dist
        path: dist

    - name: publish screenshots tests
      uses: actions/upload-artifact@master
      with:
        name: e2e-screenshots
        path: e2e/screenshots
    - name: publish screenshots tests
      uses: actions/upload-artifact@master
      with:
        name: release-${{ runner.os }}
        path: release
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: show folders
        run: ls -la
      - name: Azure Storage upload
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: az storage blob upload-batch -d '$web' -s dist --connection-string '${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}'